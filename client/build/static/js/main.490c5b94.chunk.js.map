{"version":3,"sources":["components/survey/survey.jsx","components/survey/survey_container.jsx","components/landing/landing.jsx","components/landing/landing_container.jsx","components/app.jsx","components/root.jsx","reportWebVitals.js","actions/survey_actions.js","reducers/surveys_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","store/store.jsx","index.js"],"names":["Survey","props","console","log","typeformEmbed","width","open","React","Component","connect","state","content","entities","article","dispatch","Landing","reference","launchSurvey","bind","a","faders","document","querySelectorAll","i","length","setTimeout","classList","add","closeButton","createElement","className","innerText","mode","onclick","close","querySelector","append","Container","fluid","Row","Col","Button","id","onClick","this","App","Root","store","root","getElementById","style","window","innerWidth","height","innerHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RECEIVE_SURVEY","_nullSurvey","Object","freeze","survey","sessionReducer","action","type","entitiesReducer","combineReducers","surveys","surveysReducer","rootReducer","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","addEventListener","session","windowSize","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.490c5b94.chunk.js","sourcesContent":["import React from 'react';\nimport * as typeformEmbed from '@typeform/embed'\n\nclass Survey extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props)\n    }\n\n    display() {\n\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        const reference = typeformEmbed.createPopup(\n            // 'https://developerplatform.typeform.com/to/Xc7NMh',\n            // 'https://loxz.typeform.com/to/xF6ZyWUR',\n            'xF6ZyWUR', {width: 100}\n            // {\n            //     mode: 'popup',\n            //     autoClose: 3000,\n            //     hideHeaders: true,\n            //     hideFooters: true,\n            // }\n        )\n\n        reference.open();\n        // setTimeout(function () {\n        //     reference.close()\n        // }, 10000)\n        \n        return (\n          <>\n          </>\n        )\n    }\n}\n\nexport default Survey;","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Survey from './survey';\n\nconst mSTP = state => {\n    return {\n        content: state.entities.article\n    };\n};\n\nconst mDTP = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mSTP, mDTP)(Survey);\n","import React from 'react';\nimport * as typeformEmbed from '@typeform/embed'\nimport { Button, Container, Row, Col } from 'react-bootstrap';\n\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.reference = () => {};\n        this.launchSurvey = this.launchSurvey.bind(this);\n    }\n\n    display() {\n\n    }\n\n    \n    async componentDidMount() {\n        let faders = document.querySelectorAll('.fade-in');\n        // debugger\n        for (let i = 0; i < faders.length; i++) {\n            // debugger\n            if (i === faders.length - 1) {\n                setTimeout(() => faders[i].classList.add('appear'), 8000);\n                return\n            } \n            setTimeout(() => faders[i].classList.add('appear'), i * 2000 + 1500);\n        }\n    }\n    \n    launchSurvey() {\n        let closeButton = document.createElement('div');\n        closeButton.className = 'close';\n        closeButton.innerText = 'close';\n        const reference = typeformEmbed.createSlider(\n           'xF6ZyWUR',\n           {\n               mode: 'drawer_left',\n            //    autoClose: 5,\n            //    hideHeaders: true,\n            //    hideFooters: true,\n           }\n       )   \n       // setTimeout(function () {\n       //     reference.close()\n       // }, 10000)\n        reference.open();\n        closeButton.onclick = () => reference.close();\n        document.querySelector('.frame').append(closeButton)\n    }\n\n    render() {\n        \n        return (\n            <Container fluid className='frame'>\n                <Row>\n                    <Col className='fade-in'>Are you ready...</Col>\n                </Row>\n                <Row>\n                    <Col className='fade-in'>to discover...</Col>\n                </Row>\n                <Row>\n                    <Col className='fade-in'>Machine Learning?</Col>\n                </Row>\n                <Row>\n                    <Button id=\"take-survey-button\" className='fade-in' onClick={this.launchSurvey}>let's go</Button>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Landing;","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Landing from './landing';\n\nconst mSTP = state => {\n    return {\n        content: state.entities\n    };\n};\n\nconst mDTP = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mSTP, mDTP)(Landing);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SurveyContainer from './survey/survey_container';\nimport LandingContainer from './landing/landing_container';\n\n//Header component was renamed from GreetingContainer \nconst App = () => {\n    return (\n        <LandingContainer />        \n    )\n}\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app'\n\n\nconst Root = ({ store }) => {\n    let root = document.getElementById('root') //<<<<< this chunk of commented code was messing up heights\n    root.style.width = `${window.innerWidth}px`  \n    root.style.height = `${window.innerHeight}px`  \n    // root.style.height = `${document.documentElement.scrollHeight}px`  \n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </Provider>\n    )\n};\n\nexport default Root;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const RECEIVE_SURVEY = 'RECEIVE_SURVEY'\n","import {\n    RECEIVE_SURVEY,\n} from '../actions/survey_actions';\n\nconst _nullSurvey = Object.freeze({\n    survey: null\n});\n\nconst sessionReducer = (state = _nullSurvey, action) => {\n    Object.freeze(state);\n    switch (action.type) {\n        case RECEIVE_SURVEY:\n            return { };\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer;\n","import { combineReducers } from 'redux';\nimport surveysReducer from './surveys_reducer';\n\nconst entitiesReducer = combineReducers({\n    surveys: surveysReducer\n})\n\nexport default entitiesReducer","import { combineReducers } from 'redux';\n\nimport entitiesReducer from './entities_reducer'\n\nconst rootReducer = combineReducers({\n    entities: entitiesReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers/root_reducer'\n\nconst configureStore = (preloadedState = {}) =>\n    createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, logger)\n    );\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/root';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store/store';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store\n  let preloadedState = {\n    session: {\n      windowSize: {\n        height: window.innerHeight,\n        width: window.innerWidth,\n      }\n    }\n  };\n  store = configureStore(preloadedState);\n  window.store = store;\n  const root = document.getElementById('root');\n    ReactDOM.render(\n      <React.StrictMode>\n        <Root store={store} />\n      </React.StrictMode>,\n      root\n    );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n});"],"sourceRoot":""}